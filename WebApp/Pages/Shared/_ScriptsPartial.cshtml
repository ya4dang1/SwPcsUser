<script>
$(function () {
  var localizer = new Localizer();

  $('td.datatable-datetime').each(function(){
    $(this).html(moment($(this).html()).format('DD/MMM/YYYY hh:mm:ss A'));
  });

  $('input.dataformat-date').each(function () {
    $(this).val(moment($(this).val()).format('DD/MMM/YYYY'));
  });

  if ( ! $.fn.DataTable.isDataTable('.datatable') ) {
    $.fn.DataTable.ext.pager.numbers_length = 5;
    $('.datatable').dataTable({
      "order": [
        [($('th[class*="datatable-default-sort-col-"]').index() > 0 ? $(
          'th[class*="datatable-default-sort-col-"]').index() : $('th:not(".datatable-actions")').index()), ($(
          'th[class*="datatable-default-sort-col-desc"]').index() > 0 ? "desc" : "asc")]
      ],
      "columnDefs": [{
          "orderable": false,
          "targets": 'datatable-actions'
        },
        {
          "type": 'date',
          "targets": 'datatable-datetime'
        }
      ],
      "language": {
        "decimal":        "",
        "emptyTable":     localizer.getTranslation("No data available"),
        "info":           localizer.getTranslation("Showing _START_ to _END_ of _TOTAL_ entries"),
        "infoEmpty":      localizer.getTranslation("No entries found"),
        "infoFiltered":   localizer.getTranslation("(filtered from _MAX_ total entries)"),
        "infoPostFix":    localizer.getTranslation(""),
        "thousands":      ",",
        "lengthMenu":     localizer.getTranslation("Show _MENU_ entries"),
        "loadingRecords": localizer.getTranslation("Loading..."),
        "processing":     localizer.getTranslation("Processing..."),
        "search":         localizer.getTranslation("Search:"),
        "zeroRecords":    localizer.getTranslation("No matching records found"),
        "paginate": {
            "first":      localizer.getTranslation("First"),
            "last":       localizer.getTranslation("Last"),
            "next":       ">>",
            "previous":   "<<"
        },
        "aria": {
            "sortAscending":  ": activate to sort column ascending",
            "sortDescending": ": activate to sort column descending"
        }
      },
      "pageLength": 10,
      "processing": true,
      "initComplete": function( settings, json ) {
        tableResize();
      }
    });  
  }
  $('.datatable').attr('style', 'border-collapse: collapse !important');
  
  // For btn-group
  $('.btn-group').each(function () {
    var _parent = this;
    $('.btn.currencymenu', this).click(function () {
      $(this).addClass('active');
      $(this).siblings().removeClass('active');
    });
  });

  $('.select2-single').select2({
    width: '100%',
    placeholder: "Select",
    theme: 'bootstrap'
  });
  // Initilize multiple select
  $('.select2-multiple').select2({
    width: '100%',
    minimumResultsForSearch: Infinity,
    theme: 'bootstrap'
  });

  // For confirm delete
  $('[class*="confirm-delete"]:not(.disabled)').click(function (e) {
    return confirm(localizer.getTranslation('Proceed to delete?'));
  });
  // For confirm submit
  $('[class*="confirm-submit"]:not(.disabled)').click(function (e) {
    return confirm(localizer.getTranslation('Proceed to submit?'));
  });
  // For confirm submit
  $('.disabled').click(function (e) {
    return false;
  });

  // For Expiry Date
  Inputmask('99/9999').mask($('.dataformat-expiry'));
  // For Date
  Inputmask('99/a{3}/9999').mask($('.dataformat-date'));
  // For Card Number
  Inputmask('9999 9999 9999 9999').mask($('.dataformat-creditcard'));
  // For CVV
  Inputmask('999').mask($('.dataformat-cvv'));
  // For PIN
  Inputmask('999999').mask($('.dataformat-pin'));

  // For toastr
  if(GetURLParameter('toast') == 'success'){
    toastr.success(localizer.getTranslation('Your submission has been saved.'), localizer.getTranslation('Success'));
  }
  if(GetURLParameter('toast') == 'error'){
    toastr.error(localizer.getTranslation('Something went wrong.'), localizer.getTranslation('Oops'));
  }

  // For general datatable status
  $('.datatable-status').each(function(){
    $(this).html(getIcon($.trim($(this).html())));
  });
  
  // date picker
  $('.dataformat-date').datepicker({
    format: 'dd/M/yyyy',
  });
  
  var minDate = new Date();
  var maxDate = new Date(new Date().setFullYear(new Date().getFullYear() + 10));
  $('.dataformat-expiry').datepicker({
    format: "mm/yyyy",
    minViewMode: "months",
    startDate: minDate,
    endDate: maxDate
  });  
});

$(window).on('load', function(){
  $('table.table').css('width', '100%');
});

$(window).on('resize', function() {
  tableResize();
});
</script>
